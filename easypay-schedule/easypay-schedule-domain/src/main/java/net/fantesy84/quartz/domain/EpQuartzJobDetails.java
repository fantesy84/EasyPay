package net.fantesy84.quartz.domain;
// Generated 2016-4-26 23:18:55 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * EpQuartzJobDetails generated by hbm2java
 */
@Entity
@Table(name = "EP_QUARTZ_JOB_DETAILS", catalog = "EASY_PAY")
public class EpQuartzJobDetails implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5823087234216473987L;
	private EpQuartzJobDetailsId id;
	private String description;
	private String jobClassName;
	private String isDurable;
	private String isNonconcurrent;
	private String isUpdateData;
	private String requestsRecovery;
	private byte[] jobData;
	private Set<EpQuartzTriggers> epQuartzTriggerses = new HashSet<EpQuartzTriggers>(0);

	public EpQuartzJobDetails() {
	}

	public EpQuartzJobDetails(EpQuartzJobDetailsId id, String jobClassName, String isDurable, String isNonconcurrent,
			String isUpdateData, String requestsRecovery) {
		this.id = id;
		this.jobClassName = jobClassName;
		this.isDurable = isDurable;
		this.isNonconcurrent = isNonconcurrent;
		this.isUpdateData = isUpdateData;
		this.requestsRecovery = requestsRecovery;
	}

	public EpQuartzJobDetails(EpQuartzJobDetailsId id, String description, String jobClassName, String isDurable,
			String isNonconcurrent, String isUpdateData, String requestsRecovery, byte[] jobData,
			Set<EpQuartzTriggers> epQuartzTriggerses) {
		this.id = id;
		this.description = description;
		this.jobClassName = jobClassName;
		this.isDurable = isDurable;
		this.isNonconcurrent = isNonconcurrent;
		this.isUpdateData = isUpdateData;
		this.requestsRecovery = requestsRecovery;
		this.jobData = jobData;
		this.epQuartzTriggerses = epQuartzTriggerses;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "schedName", column = @Column(name = "SCHED_NAME", nullable = false, length = 120)),
			@AttributeOverride(name = "jobName", column = @Column(name = "JOB_NAME", nullable = false, length = 200)),
			@AttributeOverride(name = "jobGroup", column = @Column(name = "JOB_GROUP", nullable = false, length = 200)) })
	public EpQuartzJobDetailsId getId() {
		return this.id;
	}

	public void setId(EpQuartzJobDetailsId id) {
		this.id = id;
	}

	@Column(name = "DESCRIPTION", length = 250)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "JOB_CLASS_NAME", nullable = false, length = 250)
	public String getJobClassName() {
		return this.jobClassName;
	}

	public void setJobClassName(String jobClassName) {
		this.jobClassName = jobClassName;
	}

	@Column(name = "IS_DURABLE", nullable = false, length = 1)
	public String getIsDurable() {
		return this.isDurable;
	}

	public void setIsDurable(String isDurable) {
		this.isDurable = isDurable;
	}

	@Column(name = "IS_NONCONCURRENT", nullable = false, length = 1)
	public String getIsNonconcurrent() {
		return this.isNonconcurrent;
	}

	public void setIsNonconcurrent(String isNonconcurrent) {
		this.isNonconcurrent = isNonconcurrent;
	}

	@Column(name = "IS_UPDATE_DATA", nullable = false, length = 1)
	public String getIsUpdateData() {
		return this.isUpdateData;
	}

	public void setIsUpdateData(String isUpdateData) {
		this.isUpdateData = isUpdateData;
	}

	@Column(name = "REQUESTS_RECOVERY", nullable = false, length = 1)
	public String getRequestsRecovery() {
		return this.requestsRecovery;
	}

	public void setRequestsRecovery(String requestsRecovery) {
		this.requestsRecovery = requestsRecovery;
	}

	@Column(name = "JOB_DATA")
	public byte[] getJobData() {
		return this.jobData;
	}

	public void setJobData(byte[] jobData) {
		this.jobData = jobData;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "epQuartzJobDetails")
	public Set<EpQuartzTriggers> getEpQuartzTriggerses() {
		return this.epQuartzTriggerses;
	}

	public void setEpQuartzTriggerses(Set<EpQuartzTriggers> epQuartzTriggerses) {
		this.epQuartzTriggerses = epQuartzTriggerses;
	}

}
