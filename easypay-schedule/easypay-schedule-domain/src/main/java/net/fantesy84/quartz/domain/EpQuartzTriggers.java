package net.fantesy84.quartz.domain;
// Generated 2016-4-26 23:18:55 by Hibernate Tools 4.3.1.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * EpQuartzTriggers generated by hbm2java
 */
@Entity
@Table(name = "EP_QUARTZ_TRIGGERS", catalog = "EASY_PAY")
public class EpQuartzTriggers implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7474826641474382700L;
	private EpQuartzTriggersId id;
	private EpQuartzJobDetails epQuartzJobDetails;
	private String description;
	private Long nextFireTime;
	private Long prevFireTime;
	private Integer priority;
	private String triggerState;
	private String triggerType;
	private long startTime;
	private Long endTime;
	private String calendarName;
	private Short misfireInstr;
	private byte[] jobData;
	private EpQuartzSimpleTriggers epQuartzSimpleTriggers;
	private EpQuartzSimpropTriggers epQuartzSimpropTriggers;
	private EpQuartzBlobTriggers epQuartzBlobTriggers;
	private EpQuartzCronTriggers epQuartzCronTriggers;

	public EpQuartzTriggers() {
	}

	public EpQuartzTriggers(EpQuartzTriggersId id, EpQuartzJobDetails epQuartzJobDetails, String triggerState,
			String triggerType, long startTime) {
		this.id = id;
		this.epQuartzJobDetails = epQuartzJobDetails;
		this.triggerState = triggerState;
		this.triggerType = triggerType;
		this.startTime = startTime;
	}

	public EpQuartzTriggers(EpQuartzTriggersId id, EpQuartzJobDetails epQuartzJobDetails, String description,
			Long nextFireTime, Long prevFireTime, Integer priority, String triggerState, String triggerType,
			long startTime, Long endTime, String calendarName, Short misfireInstr, byte[] jobData,
			EpQuartzSimpleTriggers epQuartzSimpleTriggers, EpQuartzSimpropTriggers epQuartzSimpropTriggers,
			EpQuartzBlobTriggers epQuartzBlobTriggers, EpQuartzCronTriggers epQuartzCronTriggers) {
		this.id = id;
		this.epQuartzJobDetails = epQuartzJobDetails;
		this.description = description;
		this.nextFireTime = nextFireTime;
		this.prevFireTime = prevFireTime;
		this.priority = priority;
		this.triggerState = triggerState;
		this.triggerType = triggerType;
		this.startTime = startTime;
		this.endTime = endTime;
		this.calendarName = calendarName;
		this.misfireInstr = misfireInstr;
		this.jobData = jobData;
		this.epQuartzSimpleTriggers = epQuartzSimpleTriggers;
		this.epQuartzSimpropTriggers = epQuartzSimpropTriggers;
		this.epQuartzBlobTriggers = epQuartzBlobTriggers;
		this.epQuartzCronTriggers = epQuartzCronTriggers;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "schedName", column = @Column(name = "SCHED_NAME", nullable = false, length = 120)),
			@AttributeOverride(name = "triggerName", column = @Column(name = "TRIGGER_NAME", nullable = false, length = 200)),
			@AttributeOverride(name = "triggerGroup", column = @Column(name = "TRIGGER_GROUP", nullable = false, length = 200)) })
	public EpQuartzTriggersId getId() {
		return this.id;
	}

	public void setId(EpQuartzTriggersId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "SCHED_NAME", referencedColumnName = "SCHED_NAME", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "JOB_NAME", referencedColumnName = "JOB_NAME", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "JOB_GROUP", referencedColumnName = "JOB_GROUP", nullable = false, insertable = false, updatable = false) })
	public EpQuartzJobDetails getEpQuartzJobDetails() {
		return this.epQuartzJobDetails;
	}

	public void setEpQuartzJobDetails(EpQuartzJobDetails epQuartzJobDetails) {
		this.epQuartzJobDetails = epQuartzJobDetails;
	}

	@Column(name = "DESCRIPTION", length = 250)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "NEXT_FIRE_TIME")
	public Long getNextFireTime() {
		return this.nextFireTime;
	}

	public void setNextFireTime(Long nextFireTime) {
		this.nextFireTime = nextFireTime;
	}

	@Column(name = "PREV_FIRE_TIME")
	public Long getPrevFireTime() {
		return this.prevFireTime;
	}

	public void setPrevFireTime(Long prevFireTime) {
		this.prevFireTime = prevFireTime;
	}

	@Column(name = "PRIORITY")
	public Integer getPriority() {
		return this.priority;
	}

	public void setPriority(Integer priority) {
		this.priority = priority;
	}

	@Column(name = "TRIGGER_STATE", nullable = false, length = 16)
	public String getTriggerState() {
		return this.triggerState;
	}

	public void setTriggerState(String triggerState) {
		this.triggerState = triggerState;
	}

	@Column(name = "TRIGGER_TYPE", nullable = false, length = 8)
	public String getTriggerType() {
		return this.triggerType;
	}

	public void setTriggerType(String triggerType) {
		this.triggerType = triggerType;
	}

	@Column(name = "START_TIME", nullable = false)
	public long getStartTime() {
		return this.startTime;
	}

	public void setStartTime(long startTime) {
		this.startTime = startTime;
	}

	@Column(name = "END_TIME")
	public Long getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Long endTime) {
		this.endTime = endTime;
	}

	@Column(name = "CALENDAR_NAME", length = 200)
	public String getCalendarName() {
		return this.calendarName;
	}

	public void setCalendarName(String calendarName) {
		this.calendarName = calendarName;
	}

	@Column(name = "MISFIRE_INSTR")
	public Short getMisfireInstr() {
		return this.misfireInstr;
	}

	public void setMisfireInstr(Short misfireInstr) {
		this.misfireInstr = misfireInstr;
	}

	@Column(name = "JOB_DATA")
	public byte[] getJobData() {
		return this.jobData;
	}

	public void setJobData(byte[] jobData) {
		this.jobData = jobData;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "epQuartzTriggers")
	public EpQuartzSimpleTriggers getEpQuartzSimpleTriggers() {
		return this.epQuartzSimpleTriggers;
	}

	public void setEpQuartzSimpleTriggers(EpQuartzSimpleTriggers epQuartzSimpleTriggers) {
		this.epQuartzSimpleTriggers = epQuartzSimpleTriggers;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "epQuartzTriggers")
	public EpQuartzSimpropTriggers getEpQuartzSimpropTriggers() {
		return this.epQuartzSimpropTriggers;
	}

	public void setEpQuartzSimpropTriggers(EpQuartzSimpropTriggers epQuartzSimpropTriggers) {
		this.epQuartzSimpropTriggers = epQuartzSimpropTriggers;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "epQuartzTriggers")
	public EpQuartzBlobTriggers getEpQuartzBlobTriggers() {
		return this.epQuartzBlobTriggers;
	}

	public void setEpQuartzBlobTriggers(EpQuartzBlobTriggers epQuartzBlobTriggers) {
		this.epQuartzBlobTriggers = epQuartzBlobTriggers;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "epQuartzTriggers")
	public EpQuartzCronTriggers getEpQuartzCronTriggers() {
		return this.epQuartzCronTriggers;
	}

	public void setEpQuartzCronTriggers(EpQuartzCronTriggers epQuartzCronTriggers) {
		this.epQuartzCronTriggers = epQuartzCronTriggers;
	}

}
